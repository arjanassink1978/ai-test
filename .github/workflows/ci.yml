name: Fullstack CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build backend
        run: |
          cd backend
          mvn clean install

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Run backend tests
        run: |
          cd backend
          mvn test
        continue-on-error: false

      - name: Run frontend E2E tests
        run: |
          cd frontend
          npm run test:e2e || true
        continue-on-error: true

      - name: Generate backend test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: backend/target/surefire-reports/

      - name: Generate frontend test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-report
          path: frontend/test-results/

      - name: Build and run containers
        run: |
          docker compose up --build -d
        continue-on-error: true 