name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build and test backend
        run: mvn clean verify
      - name: Upload backend Allure results
        uses: actions/upload-artifact@v4
        with:
          name: backend-allure-results
          path: backend/target/allure-results

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Build frontend
        working-directory: frontend
        run: npm run build

  e2e-playwright:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: docker-compose up -d --build

      - name: Wait for backend
        run: |
          for i in {1..30}; do
            nc -z localhost 8082 && echo "Backend is up!" && exit 0
            echo "Waiting for backend..."
            sleep 2
          done
          echo "Backend did not start in time" && exit 1

      - name: Wait for frontend
        run: |
          for i in {1..30}; do
            nc -z localhost 3000 && echo "Frontend is up!" && exit 0
            echo "Waiting for frontend..."
            sleep 2
          done
          echo "Frontend did not start in time" && exit 1

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Playwright browser dependencies
        run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install-deps"
        working-directory: frontend

      - name: Run Playwright Java E2E tests
        run: mvn clean test
        working-directory: frontend

      - name: Upload E2E Allure results
        uses: actions/upload-artifact@v4
        with:
          name: e2e-allure-results
          path: frontend/target/allure-results

      - name: Tear down containers
        if: always()
        run: docker-compose down

  allure-report:
    runs-on: ubuntu-latest
    needs: [build-backend, e2e-playwright]
    steps:
      - uses: actions/checkout@v4
      - name: Download backend Allure results
        uses: actions/download-artifact@v4
        with:
          name: backend-allure-results
          path: backend/target/allure-results
      - name: Download E2E Allure results
        uses: actions/download-artifact@v4
        with:
          name: e2e-allure-results
          path: frontend/target/allure-results
      - name: Merge Allure results
        run: |
          mkdir -p merged-allure-results
          cp -r backend/target/allure-results/* merged-allure-results/ || true
          cp -r frontend/target/allure-results/* merged-allure-results/ || true
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@v1.8
        with:
          allure_results: merged-allure-results
          allure_report: allure-report
          gh_pages: gh-pages
      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
      - name: Dummy step to test YAML
        run: echo "YAML is valid"
      - name: Add summary with Allure report link
        run: true