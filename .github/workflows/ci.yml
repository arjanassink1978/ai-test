name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build and test backend
        run: |
          cd backend
          mvn clean verify
      - name: Build backend Docker image
        run: docker build -t backend:test ./backend
      - name: Upload backend Allure results
        uses: actions/upload-artifact@v4
        with:
          name: backend-allure-results
          path: backend/target/allure-results

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      - name: Build frontend Docker image
        run: docker build -t frontend:test ./frontend

  # This job runs Playwright E2E tests against backend and frontend service containers
  e2e-playwright:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    services:
      backend:
        image: backend:test
        ports:
          - 8082:8082
        options: >-
          --health-cmd "curl --fail http://localhost:8082/actuator/health || exit 1"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10
      frontend:
        image: frontend:test
        ports:
          - 3000:3000
        options: >-
          --health-cmd "wget --spider --quiet http://localhost:3000/ || exit 1"
          --health-interval 5s
          --health-timeout 2s
          --health-retries 10
    steps:
      - uses: actions/checkout@v4
      - name: Wait for services to be healthy
        run: sleep 20
      - name: Install Playwright browser dependencies
        run: mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args="install-deps"
      - name: Run Playwright E2E tests (Java)
        working-directory: frontend
        run: mvn test
      - name: Upload Allure results from E2E tests
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-e2e
          path: frontend/target/allure-results

  allure-report:
    runs-on: ubuntu-latest
    needs: [build-backend, e2e-playwright]
    steps:
      - uses: actions/checkout@v4
      - name: Download backend Allure results
        uses: actions/download-artifact@v4
        with:
          name: backend-allure-results
          path: backend/target/allure-results
      - name: Download E2E Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results-e2e
          path: frontend/target/allure-results
      - name: Merge Allure results
        run: |
          mkdir -p merged-allure-results
          cp -r backend/target/allure-results/* merged-allure-results/ || true
          cp -r frontend/target/allure-results/* merged-allure-results/ || true
      - name: Generate Allure report
        uses: simple-elf/allure-report-action@v1.8
        with:
          allure_results: merged-allure-results
          allure_report: allure-report
          gh_pages: gh-pages
      - name: Upload Allure report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report
      - name: Add summary with Allure report link
        run: echo "Allure report: https://arjanassink1978.github.io/ai-test/" >> $GITHUB_STEP_SUMMARY