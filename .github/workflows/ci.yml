name: Fullstack CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build backend
        run: |
          cd backend
          mvn clean install

      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - name: Run backend tests (JUnit + Allure)
        run: |
          cd backend
          mvn clean test
      - name: Generate Allure report for backend
        run: |
          cd backend
          mvn allure:report
      - name: Upload Allure report (backend) as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-backend
          path: backend/target/site/allure-maven-plugin
      - name: Upload Allure report (backend) for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: backend/target/site/allure-maven-plugin
          retention-days: 1
          name: allure-report-backend-pages

      - name: Run frontend E2E tests (JUnit + Playwright + Allure)
        run: |
          cd frontend
          mvn clean test
      - name: Generate Allure report for frontend
        run: |
          cd frontend
          mvn allure:report
      - name: Upload Allure report (frontend) as artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-frontend
          path: frontend/target/site/allure-maven-plugin
      - name: Upload Allure report (frontend) for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/target/site/allure-maven-plugin
          retention-days: 1
          name: allure-report-frontend-pages

      - name: Generate backend test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: backend/target/surefire-reports/

      - name: Generate frontend test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-test-report
          path: frontend/test-results/

      - name: Build and run containers
        run: |
          docker compose up --build -d
        continue-on-error: true

  deploy-allure-backend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy Allure backend report to Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: allure-report-backend-pages

  deploy-allure-frontend:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy Allure frontend report to Pages
        uses: actions/deploy-pages@v4
        with:
          artifact_name: allure-report-frontend-pages

  summary:
    needs: [deploy-allure-backend, deploy-allure-frontend]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Add Allure report links to summary
        run: |
          echo "### Allure Reports" >> $GITHUB_STEP_SUMMARY
          echo "- [Backend Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report-backend/)" >> $GITHUB_STEP_SUMMARY
          echo "- [Frontend Allure Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/allure-report-frontend/)" >> $GITHUB_STEP_SUMMARY 